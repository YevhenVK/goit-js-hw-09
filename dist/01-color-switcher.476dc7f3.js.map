{"version":3,"sources":["js/01-color-switcher.js"],"names":["refs","startBtn","document","querySelector","stopBtn","bodyColor","intervalId","CreateColors","constructor","color","start","disabled","style","backgroundColor","setInterval","stop","clearInterval","createColors","getRandomHexColor","addEventListener","bind","Math","floor","random","toString"],"mappings":"AAAA,MAAMA,IAAI,GAAG;AACXC,EAAAA,QAAQ,EAAEC,QAAQ,CAACC,aAAT,CAAuB,oBAAvB,CADC;AAEXC,EAAAA,OAAO,EAAEF,QAAQ,CAACC,aAAT,CAAuB,mBAAvB,CAFE;AAGXE,EAAAA,SAAS,EAAEH,QAAQ,CAACC,aAAT,CAAuB,aAAvB;AAHA,CAAb;AAMA,IAAIG,UAAU,GAAG,IAAjB;;AAEA,MAAMC,YAAN,CAAmB;AAEfC,EAAAA,WAAW,CAAC;AAAER,IAAAA,IAAF;AAAQS,IAAAA;AAAR,GAAD,EAAkB;AACzB,UAAM;AAAER,MAAAA,QAAF;AAAYG,MAAAA,OAAZ;AAAqBC,MAAAA;AAArB,QAAmCL,IAAzC;AACA,SAAKS,KAAL,GAAaA,KAAb;AAEA,SAAKR,QAAL,GAAgBA,QAAhB;AACA,SAAKG,OAAL,GAAeA,OAAf;AACA,SAAKC,SAAL,GAAiBA,SAAjB;AACH;;AAEDK,EAAAA,KAAK,GAAG;AACJ,QAAI,KAAKN,OAAL,CAAaO,QAAjB,EAA2B;AACvB,WAAKP,OAAL,CAAaO,QAAb,GAAwB,KAAxB;AACH;;AACD,SAAKV,QAAL,CAAcU,QAAd,GAAyB,IAAzB;AACA,SAAKN,SAAL,CAAeO,KAAf,CAAqBC,eAArB,GAAuC,KAAKJ,KAAL,EAAvC;AAEA,SAAKH,UAAL,GAAkBQ,WAAW,CAAC,MAAM;AAChC,WAAKT,SAAL,CAAeO,KAAf,CAAqBC,eAArB,GAAuC,KAAKJ,KAAL,EAAvC;AACH,KAF4B,EAE1B,IAF0B,CAA7B;AAGH;;AAEDM,EAAAA,IAAI,GAAG;AACHC,IAAAA,aAAa,CAAC,KAAKV,UAAN,CAAb;AACA,SAAKL,QAAL,CAAcU,QAAd,GAAyB,KAAzB;AACA,SAAKP,OAAL,CAAaO,QAAb,GAAwB,IAAxB;;AACA,QAAI,KAAKP,OAAL,CAAaO,QAAb,GAAwB,IAA5B,EAAkC;AAC9B,WAAKN,SAAL,CAAeO,KAAf,CAAqBC,eAArB,GAAuC,IAAvC;AACH;AACJ;;AA9Bc;;AA+BlB;AAED,MAAMI,YAAY,GAAG,IAAIV,YAAJ,CAAiB;AAClCP,EAAAA,IADkC;AAElCS,EAAAA,KAAK,EAAES;AAF2B,CAAjB,CAArB;AAKAlB,IAAI,CAACC,QAAL,CAAckB,gBAAd,CAA+B,OAA/B,EAAwCF,YAAY,CAACP,KAAb,CAAmBU,IAAnB,CAAwBH,YAAxB,CAAxC;AACAjB,IAAI,CAACI,OAAL,CAAae,gBAAb,CAA8B,OAA9B,EAAuCF,YAAY,CAACF,IAAb,CAAkBK,IAAlB,CAAuBH,YAAvB,CAAvC,GAEA;;AACA,SAASC,iBAAT,GAA6B;AACzB,SAAQ,IAAGG,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAkD,EAA7D;AACH","file":"01-color-switcher.476dc7f3.js","sourceRoot":"../src","sourcesContent":["const refs = {\n  startBtn: document.querySelector('button[data-start]'),\n  stopBtn: document.querySelector('button[data-stop]'),\n  bodyColor: document.querySelector('.body-color'),\n};\n\nlet intervalId = null;\n\nclass CreateColors {\n    \n    constructor({ refs, color }) {\n        const { startBtn, stopBtn, bodyColor } = refs;\n        this.color = color;\n        \n        this.startBtn = startBtn;\n        this.stopBtn = stopBtn;\n        this.bodyColor = bodyColor;\n    }\n\n    start() {\n        if (this.stopBtn.disabled) {\n            this.stopBtn.disabled = false;\n        }\n        this.startBtn.disabled = true;\n        this.bodyColor.style.backgroundColor = this.color();\n\n        this.intervalId = setInterval(() => {\n            this.bodyColor.style.backgroundColor = this.color();\n        }, 2000);\n    }\n\n    stop() {\n        clearInterval(this.intervalId);\n        this.startBtn.disabled = false;\n        this.stopBtn.disabled = true;\n        if (this.stopBtn.disabled = true) {\n            this.bodyColor.style.backgroundColor = null;\n        }\n    }\n};\n\nconst createColors = new CreateColors({\n    refs,\n    color: getRandomHexColor\n});\n\nrefs.startBtn.addEventListener('click', createColors.start.bind(createColors));\nrefs.stopBtn.addEventListener('click', createColors.stop.bind(createColors));\n\n//Для генерации случайного цвета используй функцию getRandomHexColor.\nfunction getRandomHexColor() {\n    return `#${Math.floor(Math.random() * 16777215).toString(16)}`;\n}\n\n"]}